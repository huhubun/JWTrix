@page "/histories/{leftId:long}/differences/{rightId:long}"
@using DiffPlex.DiffBuilder.Model;

@inject StateContainer State
@inject IHistoryService HistoryService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

@if (LeftJwtSecurityToken != null && RightJwtSecurityToken != null)
{
    <EnumButtonGroup Selected="decodeViewMode" OnSelectionChanged="@((DecodeViewMode value) => decodeViewMode = value)" />

    <MudContainer Fixed Class="mt-3 pb-16">
        @if (decodeViewMode == DecodeViewMode.Json)
        {
            <Diff OldText="@LeftJwtSecurityToken.DecodeHeader()" NewText="@RightJwtSecurityToken.DecodeHeader()" />

            <br />

            <Diff OldText="@LeftJwtSecurityToken.DecodePayload()" NewText="@RightJwtSecurityToken.DecodePayload()" />
        }
        else
        {
            <DetailDiff LeftJwtSecurityToken="LeftJwtSecurityToken" RightJwtSecurityToken="RightJwtSecurityToken" Selector="token => token.Header" />

            <br />

            <DetailDiff LeftJwtSecurityToken="LeftJwtSecurityToken" RightJwtSecurityToken="RightJwtSecurityToken" Selector="token => token.Payload" />
        }

        <MudPaper Elevation="0" Class="mt-3 d-flex gap-6">
            <MudButton Variant="Variant.Outlined" FullWidth OnClick="() => GoToDetai(LeftId)">查看详情</MudButton>
            <MudButton Variant="Variant.Outlined" FullWidth OnClick="() => GoToDetai(RightId)">查看详情</MudButton>
        </MudPaper>
    </MudContainer>
}

@code {
    [Parameter]
    public long LeftId { get; set; }

    [Parameter]
    public long RightId { get; set; }

    private DecodeViewMode decodeViewMode = DecodeViewMode.Json;
    private JwtSecurityToken? LeftJwtSecurityToken = null;
    private JwtSecurityToken? RightJwtSecurityToken = null;

    protected override async Task OnInitializedAsync()
    {
        var left = HistoryService.GetByIdAsync(LeftId);
        var right = HistoryService.GetByIdAsync(RightId);

        Task.WaitAll(left, right);

        LeftJwtSecurityToken = JwtHelper.ConvertToJwtSecurityToken(left.Result?.Content ?? String.Empty);
        RightJwtSecurityToken = JwtHelper.ConvertToJwtSecurityToken(right.Result?.Content ?? String.Empty);

        await base.OnInitializedAsync();
    }

    void GoToDetai(long id)
    {
        Navigation.NavigateTo($"/detail/{id}");
    }
}
